<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="FrmNewPrix.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        n0BQKLmxK20AAAAASUVORK5CYII=
</value>
  </data>
</root>